@model SQLExerciser.Models.DB.DbDiagram

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "Diagram", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>DbDiagram</h4>
    <hr />

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CreationQuery, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.CreationQuery, new { @class = "form-control", @rows = 10, @cols = 100, @onclick = "restartTextArea()" })
            @Html.ValidationMessageFor(model => model.CreationQuery, "", new { @class = "text-danger" })
        </div>
        <div class="text-justify">
            <input type="button" role="button" value="Execute query" onclick="executeQuery()" class="btn btn-info" />
            <label id="outputId">Output ...</label>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Diagram, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="image" id="image" />
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @{ Html.RenderPartial("QueryTesting"); }
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>

    var createQuery = 'CREATE TABLE tab (id int PRIMARY KEY);';
    document.getElementById('CreationQuery').value = createQuery;
    function restartTextArea() {
        var txtArea = document.getElementById('CreationQuery');
        if (txtArea.textContent == createQuery) {
            txtArea.value = '';
        }
    }
    function executeQuery() {
        var insertedQuery = document.getElementById('queryIn').value;
        $.ajax({
            type: "GET",
            url: '@Url.Action("TryQuery", "Diagram")',// + '/' + insertedQuery,
            data: { query: insertedQuery },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                document.getElementById('outputId').innerHTML = 'Received output from DB: ' + data.result;
            },
            error: function (data) {
                document.getElementById('outputId').innerHTML = 'Received output from DB: ' + data.result;
            }
        });
    }
</script>